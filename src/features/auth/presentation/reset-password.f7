<template>
  <div class="page" data-name="reset-password">
    <div class="navbar"><div class="navbar-inner sliding"><div class="title">Set new password</div></div></div>
    <div class="page-content">
      <div class="block">
        <form id="reset-password-form">
          <div class="list no-hairlines-md">
            <ul>
              <li class="item-content item-input">
                <div class="item-inner">
                  <div class="item-title item-label">New password</div>
                  <div class="item-input-wrap"><input name="password" type="password" required minlength="8"/></div>
                </div>
              </li>
            </ul>
          </div>

          <div class="block"><button class="button button-fill" type="submit">Set password</button></div>
        </form>
      </div>
    </div>
  </div>
</template>

<script>
import RestAPIService from "../../../services/restAPIService.js";
import AuthService from "../../../js/authService.js";
import AuthStore from "../../../js/authStore.js";

export default () => { return $render; };

export async function onPageInit(e, page) {
  const app = page.app;
  const form = page.$el.querySelector('#reset-password-form');
  const authSvc = new AuthService(new RestAPIService({
    dataToPayload: (d) => JSON.stringify(d),
    payloadToData: (p) => p,
    getUrl: (route) => route,
  }));

  // assume reset token provided as `?token=...` query param
  const token = page.route.query?.token || null;
  if (!token) {
    app.dialog.alert('Invalid reset link');
    app.views.main.router.navigate('/');
    return;
  }

  form.addEventListener('submit', async (ev) => {
    ev.preventDefault();
    const fd = new FormData(form);
    const password = fd.get('password');
    app.preloader.show();
    try {
      await authSvc.resetPassword({ token, password });
      app.preloader.hide();
      app.dialog.alert('Password updated. Please login.');
      app.views.main.router.navigate('/auth/login/');
    } catch (err) {
      app.preloader.hide();
      app.dialog.alert(err.message || 'Reset failed');
    }
  });
}

export const pageInit = onPageInit;